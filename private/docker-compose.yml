version: '3'
services:
  #
  # Servers
  #
 
  geth01:
    build: ./images/ethereum
    networks:
      ethereum:
        ipv4_address: ${NODE01_IP:?}
    ports:
      - "8545:8545"
    volumes:
      - ./:/root
    working_dir: /root
    entrypoint: [
      "geth",
      "--networkid", "${NETWORK_ID:?}",
      "--authrpc.port", "8551",
    ]
    command: [
      "--http",
      "--http.api", "eth,personal",
      "--http.addr", "0.0.0.0",
      "--http.vhosts", "*",
      "--allow-insecure-unlock",

      "--datadir", ".tmp/node01",
      "--nodekey", "./files/node01/nodekey",
      "--keystore", "./files/node01/keystore",
      # PoA signer
      "--unlock", "0x6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf",
      "--password", "./files/node01/password_6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf.txt",
      "--mine",
      "--miner.etherbase", "0x6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf",
      # Bootstrap Node Settings
      "--port", "${NODE01_PORT:?}",
      "-nat", "extip:${NODE01_IP:?}",
    ]

  geth02:
    build: ./images/ethereum
    networks:
      ethereum:
    volumes:
      - ./:/root
    working_dir: /root
    entrypoint: [
      "geth",
      "--networkid", "${NETWORK_ID:?}",
      "--authrpc.port", "8551",
    ]
    command: [
      "--datadir", ".tmp/node02",
      "--nodekey", "./files/node02/nodekey",
      "--keystore", "./files/node02/keystore",
      # Member Node Settings
      "--bootnodes", "${NODE01_ID:?}",
    ]

  #
  # Commands
  #

  create-genesis-json:
    profiles: [command]
    image: golang:1.20.1
    volumes:
      - ./app/:/app/
    entrypoint: go run /app/create-genesis-json/main.go

  geth:
    profiles: [command]
    build: images/ethereum
    networks:
      ethereum:
    volumes:
      - ./:/root
      - ./.tmp/node02/.geth/:/data/node02
    working_dir: /root
    entrypoint: geth
    command: attach .tmp/node01/geth.ipc
 
networks:
  ethereum:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
